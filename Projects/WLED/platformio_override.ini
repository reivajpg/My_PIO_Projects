# Example PlatformIO Project Configuration Override
# ------------------------------------------------------------------------------
# Copy to platformio_override.ini to activate overrides
# ------------------------------------------------------------------------------
# Please visit documentation: https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = nodemcuv2 #ESP32C3_Super_Mini  # put the name(s) of your own build environment here. You can define as many as you need
#----------
# SAMPLE DALLASTEMPERATURE
#----------
; -------
; USERMOD_DALLASTEMPERATURE                      - define this to have this user mod included wled00\usermods_list.cpp
; USERMOD_DALLASTEMPERATURE_CELSIUS              - define this to report temperatures in degrees celsius, otherwise fahrenheit will be reported
; USERMOD_DALLASTEMPERATURE_MEASUREMENT_INTERVAL - the number of milliseconds between measurements, defaults to 60 seconds
; USERMOD_DALLASTEMPERATURE_FIRST_MEASUREMENT_AT - the number of milliseconds after boot to take first measurement, defaults to 20 seconds
;
[env:ESP32C3_Super_Mini]
extends = env:esp32c3dev
build_flags = ${common.build_flags} ${esp32c3.build_flags}
  ;-D WLED_RELEASE_NAME=ESP32C3_Super_Mini_Temp
  -D USERMOD_DALLASTEMPERATURE
  -D USERMOD_DALLASTEMPERATURE_CELSIUS
  -D WLED_DISABLE_BLYNK
  -D WLED_DISABLE_ALEXA
  -D WLED_DISABLE_INFRARED
  -D WLED_DISABLE_HUESYNC
  -D WLED_ENABLE_ADALIGHT
  -D WLED_DISABLE_LOXONE
  ;-D WLED_WATCHDOG_TIMEOUT=5
  ; DEBUG reserves GPIO1
  ;-D WLED_DEBUG
  -D TEMPERATURE_PIN=4
  ;-D CONFIG_ASYNC_TCP_USE_WDT=1
  ;-D LED_BUILTIN=8 # GPIO of built-in LED
  ; Configure default WiFi
  -D CLIENT_SSID='"MOVISTAR_C0AB"'
  -D CLIENT_PASS='"FFF71B86661D21D43EED"'
lib_deps = ${env.lib_deps}
  makuna/NeoPixelBus @ 2.6.9
  https://github.com/pbolduc/AsyncTCP.git @ 1.2.0
  milesburton/DallasTemperature@^3.9.0
  ;milesburton/DallasTemperature
  ;paulstoffregen/OneWire@^2.3.7
  https://github.com/PaulStoffregen/OneWire.git
  ;OneWire@~2.3.5
  ;robtillaart/DS18B20@^0.1.12


# ------------------------------------------------------------------------------
# PRE-CONFIGURED DEVELOPMENT BOARDS AND CONTROLLERS
# ------------------------------------------------------------------------------

[env:d1_mini]
board = d1_mini
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
upload_speed = 921600
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} ${esp8266.build_flags}
lib_deps = ${esp8266.lib_deps}
monitor_filters = esp8266_exception_decoder

[env:d1_mini_5CH_Shojo_PCB]
board = d1_mini
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} ${esp8266.build_flags} -D WLED_USE_SHOJO_PCB ;; NB: WLED_USE_SHOJO_PCB is not used anywhere in the source code. Not sure why its needed.
lib_deps = ${esp8266.lib_deps}

[env:d1_mini_debug]
board = d1_mini
build_type = debug
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} ${esp8266.build_flags} ${common.debug_flags}
lib_deps = ${esp8266.lib_deps}

[env:d1_mini_ota]
board = d1_mini
upload_protocol = espota
# exchange for your WLED IP
upload_port = "10.10.1.27"
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} ${esp8266.build_flags}
lib_deps = ${esp8266.lib_deps}

[env:esp32c3dev_2MB]
;; for ESP32-C3 boards with 2MB flash (instead of 4MB).
;; this board need a specific partition file. OTA not possible.
extends = esp32c3
platform = ${esp32c3.platform}
platform_packages = ${esp32c3.platform_packages}
board = esp32-c3-devkitm-1
build_flags = ${common.build_flags} ${esp32c3.build_flags}
  -D WLED_WATCHDOG_TIMEOUT=0
  -D WLED_DISABLE_OTA
  ; -DARDUINO_USB_CDC_ON_BOOT=1 ;; for virtual CDC USB
  -DARDUINO_USB_CDC_ON_BOOT=0   ;; for serial-to-USB chip
build_unflags = ${common.build_unflags}
upload_speed = 115200
lib_deps = ${esp32c3.lib_deps}
board_build.partitions = tools/WLED_ESP32_2MB_noOTA.csv
board_build.flash_mode = dio
board_upload.flash_size = 2MB
board_upload.maximum_size = 2097152

[env:wemos_shield_esp32]
extends = esp32              ;; use default esp32 platform
board = esp32dev
upload_speed = 460800
build_flags = ${common.build_flags} ${esp32.build_flags}
  -D WLED_RELEASE_NAME=\"ESP32_wemos_shield\"
  -D DATA_PINS=16
  -D RLYPIN=19
  -D BTNPIN=17
  -D IRPIN=18
  -UWLED_USE_MY_CONFIG
  -D USERMOD_DALLASTEMPERATURE
  -D USERMOD_FOUR_LINE_DISPLAY
  -D TEMPERATURE_PIN=23
  ${esp32.AR_build_flags} ;; includes USERMOD_AUDIOREACTIVE
lib_deps = ${esp32.lib_deps}
  OneWire@~2.3.5          ;; needed for USERMOD_DALLASTEMPERATURE
  olikraus/U8g2 @ ^2.28.8 ;; needed for USERMOD_FOUR_LINE_DISPLAY
  ${esp32.AR_lib_deps}    ;; needed for USERMOD_AUDIOREACTIVE
board_build.partitions = ${esp32.default_partitions}

[env:esp32_pico-D4]
extends = esp32              ;; use default esp32 platform
board = pico32               ;; pico32-D4 is different from the standard esp32dev
                             ;; hardware details from https://github.com/srg74/WLED-ESP32-pico
build_flags = ${common.build_flags} ${esp32.build_flags}
  -D WLED_RELEASE_NAME=\"pico32-D4\" -D SERVERNAME='"WLED-pico32"'
  -D WLED_DISABLE_ADALIGHT   ;; no serial-to-USB chip on this board - better to disable serial protocols
  -D DATA_PINS=2,18          ;; LED pins
  -D RLYPIN=19 -D BTNPIN=0 -D IRPIN=-1 ;; no default pin for IR
  ${esp32.AR_build_flags}    ;; include USERMOD_AUDIOREACTIVE
  -D UM_AUDIOREACTIVE_ENABLE ;; enable AR by default
  ;; Audioreactive settings for on-board microphone (ICS-43432)
  -D SR_DMTYPE=1 -D I2S_SDPIN=25 -D I2S_WSPIN=15 -D I2S_CKPIN=14
  -D SR_SQUELCH=5 -D SR_GAIN=30
lib_deps = ${esp32.lib_deps}
  ${esp32.AR_lib_deps}       ;; needed for USERMOD_AUDIOREACTIVE
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L
